[{"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\index.js":"1","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\reportWebVitals.js":"2","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\App.js":"3","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\HomePage.js":"4","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\LoginPage.js":"5","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\WatchlistPage.js":"6","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\MarketPage.js":"7","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\StockappNavbar.js":"8","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\SignupPage.js":"9","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\LiveSearchBox.js":"10","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\TickerCard.js":"11","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\MarketsView.js":"12","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\ExchangeView.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1916,"mtime":1611561068883,"results":"17","hashOfConfig":"15"},{"size":3889,"mtime":1611480823969,"results":"18","hashOfConfig":"15"},{"size":2284,"mtime":1611227786740,"results":"19","hashOfConfig":"15"},{"size":5617,"mtime":1611522853623,"results":"20","hashOfConfig":"15"},{"size":2364,"mtime":1611570358727,"results":"21","hashOfConfig":"15"},{"size":1175,"mtime":1611217422318,"results":"22","hashOfConfig":"15"},{"size":212,"mtime":1611216511796,"results":"23","hashOfConfig":"15"},{"size":2736,"mtime":1611229216605,"results":"24","hashOfConfig":"15"},{"size":1309,"mtime":1611480365495,"results":"25","hashOfConfig":"15"},{"size":1493,"mtime":1611574561302,"results":"26","hashOfConfig":"15"},{"size":2357,"mtime":1611576235700,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1v5l073",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\index.js",[],["58","59"],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\reportWebVitals.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\App.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\HomePage.js",["60"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport LiveSearchBox from '../components/LiveSearchBox';\r\nimport TickerCard from '../components/TickerCard'\r\nimport StockappNavbar from '../components/StockappNavbar';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: [],\r\n            selectedTickers: [],\r\n            symbolResults: []\r\n        };\r\n    }\r\n    addTicker = (index) => {\r\n        const ticker = this.state.results[index];\r\n        const ticker_symbol = this.state.symbolResults[index];\r\n        console.log('ticker_symbol', ticker_symbol);\r\n        axios.get(`http://api.marketstack.com/v1/tickers/${ticker_symbol}/eod/latest?access_key=43d9fceee09a8d4b8113b69f9214c110`)\r\n            .then((res) => {\r\n                const open = res.data.open;\r\n                const high =res.data.high;\r\n                const low =res.data.low;\r\n                const close =res.data.close;\r\n                const volume =res.data.volume;\r\n                console.log('res.data.open', res.data.open);\r\n                // const open = res.data.data.eod.map( (item) => {\r\n                //     return item.open;\r\n                // })\r\n                // const close = res.data.data.eod.map( (item) => {\r\n                //     return item.close;\r\n                // })\r\n\r\n                this.setState({\r\n                    selectedTickers: this.state.selectedTickers.concat({symbol: ticker_symbol, name: ticker, \r\n                        open: open, close: close, high: high, low: low, volume: volume}),\r\n                    results: [],\r\n                });\r\n                console.log('gooo', this.state.selectedTickers);\r\n            });\r\n    };\r\n    searchTickers = (searchText) => {\r\n        if( ! searchText ) {\r\n            this.setState({\r\n                results: []\r\n            })\r\n            return;\r\n        };\r\n        // Array.filter -> An array method\r\n        // Takes a callback\r\n        // for each item in the array -> the callback is run with a different item\r\n        // if the callback returns true, the item stays\r\n        // if false it is not in the new array\r\n        // Returns a new filtered array, does not effect the original array\r\n        \r\n        // const searchResults = this.staticActorsJson.filter( (actor) => {\r\n        //     return actor.toLowerCase().includes(searchText.toLowerCase());\r\n        // })\r\n        axios.get(`http://api.marketstack.com/v1/tickers?access_key=43d9fceee09a8d4b8113b69f9214c110&search=${searchText}`)\r\n            .then((res) => {\r\n                const names = res.data.data.map( (item) => {\r\n                    return item.name;\r\n                })\r\n                const symbols = res.data.data.map( (item) => {\r\n                    return item.symbol;\r\n                })\r\n                this.setState({\r\n                    results: names,\r\n                    symbolResults: symbols,\r\n                    selectedTickers: []\r\n                })\r\n                console.log('symbolresults', symbols)\r\n            });\r\n    };\r\n    render() {\r\n        const tickerCards = this.state.selectedTickers.map( (ticker, index) => {\r\n            return <TickerCard tickerName={ticker.name} tickerOpen={ticker.open} \r\n            tickerClose={ticker.close} tickerHigh={ticker.high} tickerLow={ticker.low}\r\n            tickerVolume={ticker.volume}> </TickerCard>\r\n            \r\n        });\r\n        return (\r\n            <div className=\"c-home-page\">\r\n                <LiveSearchBox \r\n                searchTextChanged={this.searchTickers}\r\n                resultSelected={this.addTicker}\r\n                placeholderText=\"Symbol/Company/Index\" \r\n                results={this.state.results} />\r\n                \r\n                <div>{tickerCards}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage;","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\LoginPage.js",["61","62"],"import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport users from '../data/users.json';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        // Controlled component steps\r\n        // 1. Add key to state\r\n        // 2. map to value\r\n        // 3. update using onChange\r\n        this.state = {\r\n            email: '',\r\n            pwd: ''\r\n        }\r\n    }\r\n    validateLogin = () => {\r\n        for( let i = 0; i< users.length; i++) {\r\n            if( users[i].pwd == this.state.pwd && users[i].email == this.state.email) {\r\n                this.props.handleLogin(users[i]);\r\n                window.location = '/#/watchlist'\r\n                return;\r\n                // We will login the user\r\n                // return the found user\r\n            }\r\n        // alert that the user does not exist\r\n        }\r\n        alert('user not found');\r\n    }\r\n    render() {\r\n        // Steps to login\r\n        // 1. if the user exists in the user.json?\r\n        // 2. if the user password matches\r\n        // 3. update the activeUser state in <App> (using handleLogin() prop)\r\n        return (\r\n            <div className=\"c-login-page\">\r\n                <h1>Login</h1>\r\n            <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" \r\n                onChange={(event) => {this.setState({email: event.target.value})}} \r\n                placeholder=\"Enter email\" value={this.state.email} />\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\"\r\n                 onChange={(event) => {this.setState({pwd: event.target.value})}} \r\n                 placeholder=\"Password\"  value={this.state.pwd}/>\r\n                </Form.Group>\r\n                <Button onClick={this.validateLogin} block variant=\"success\" type=\"button\">\r\n                Login\r\n                </Button>\r\n            </Form> \r\n            <br/>\r\n            <a href=\"/#/signup\">To Signup</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    export default LoginPage;","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\WatchlistPage.js",["63"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport LiveSearchBox from '../components/LiveSearchBox';\r\nimport TickerCard from '../components/TickerCard'\r\nimport tickerJSON from '../data/tickers.json';\r\nimport StockappNavbar from '../components/StockappNavbar';\r\n\r\nclass WatchlistPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let searchedTickers;\r\n        if(localStorage.getItem('localTickers')){\r\n        searchedTickers = JSON.parse(localStorage.getItem('localTickers'));\r\n        }\r\n        else{\r\n        searchedTickers = tickerJSON;\r\n        }\r\n        this.state = {\r\n            results: [],\r\n            selectedTickers: [],\r\n            symbolResults: [],\r\n            searchedTickers: searchedTickers,\r\n            index: ''\r\n        };\r\n    }\r\n    addTicker = (index) => {\r\n        const ticker = this.state.results[index];\r\n        const ticker_symbol = this.state.symbolResults[index];\r\n        console.log('ticker_symbol', ticker_symbol);\r\n        axios.get(`http://api.marketstack.com/v1/tickers/${ticker_symbol}/eod/latest?access_key=43d9fceee09a8d4b8113b69f9214c110`)\r\n            .then((res) => {\r\n                const open = res.data.open;\r\n                const high =res.data.high;\r\n                const low =res.data.low;\r\n                const close =res.data.close;\r\n                const volume =res.data.volume;\r\n                console.log('res.data.open', res.data.open);\r\n                // const open = res.data.data.eod.map( (item) => {\r\n                //     return item.open;\r\n                // })\r\n                // const close = res.data.data.eod.map( (item) => {\r\n                //     return item.close;\r\n                // })\r\n                \r\n                const newTickers = this.state.searchedTickers.concat({symbol: ticker_symbol, name: ticker, \r\n                    open: open, close: close, high: high, low: low, volume: volume})\r\n                localStorage.setItem('localTickers', JSON.stringify(newTickers))\r\n\r\n                this.setState({\r\n                    selectedTickers: this.state.selectedTickers.concat({symbol: ticker_symbol, name: ticker, \r\n                        open: open, close: close, high: high, low: low, volume: volume}),\r\n                    results: [],\r\n                    searchedTickers: newTickers\r\n                });\r\n                console.log('foooo', this.state.selectedTickers);\r\n            });\r\n    };\r\n    searchTickers = (searchText) => {\r\n        if( ! searchText ) {\r\n            this.setState({\r\n                results: []\r\n            })\r\n            return;\r\n        };\r\n        // Array.filter -> An array method\r\n        // Takes a callback\r\n        // for each item in the array -> the callback is run with a different item\r\n        // if the callback returns true, the item stays\r\n        // if false it is not in the new array\r\n        // Returns a new filtered array, does not effect the original array\r\n        \r\n        // const searchResults = this.staticActorsJson.filter( (actor) => {\r\n        //     return actor.toLowerCase().includes(searchText.toLowerCase());\r\n        // })\r\n        axios.get(`http://api.marketstack.com/v1/tickers?access_key=43d9fceee09a8d4b8113b69f9214c110&search=${searchText}`)\r\n            .then((res) => {\r\n                const names = res.data.data.map( (item) => {\r\n                    return item.name;\r\n                })\r\n                const symbols = res.data.data.map( (item) => {\r\n                    return item.symbol;\r\n                })\r\n                this.setState({\r\n                    results: names,\r\n                    symbolResults: symbols,\r\n                    selectedTickers: []\r\n                })\r\n                console.log('symbolresults', symbols)\r\n            });\r\n    };\r\n    removeTicker = () => {\r\n        this.state.searchedTickers.splice(this.index, 1);\r\n        localStorage.setItem('localTickers', JSON.stringify(this.state.searchedTickers));\r\n        // localStorage.removeItem('localTickers');\r\n        this.setState({\r\n            searchedTickers: JSON.parse(localStorage.getItem('localTickers'))\r\n        });\r\n    };\r\n    render() {\r\n        if( ! this.props.activeUser){\r\n            return <Redirect push to=\"/login\" />\r\n        }\r\n        let tickerCards;\r\n        if(this.state.searchedTickers){\r\n            tickerCards = this.state.searchedTickers.map( (ticker, index) => {\r\n                return <TickerCard tickerName={ticker.name} tickerOpen={ticker.open} \r\n                tickerClose={ticker.close} tickerHigh={ticker.high} tickerLow={ticker.low}\r\n                tickerVolume={ticker.volume} removeTicker={this.removeTicker}></TickerCard>\r\n                \r\n            });\r\n        }\r\n        else{\r\n            tickerCards = this.state.selectedTickers.map( (ticker, index) => {\r\n                return <TickerCard tickerName={ticker.name} tickerOpen={ticker.open} \r\n                tickerClose={ticker.close} tickerHigh={ticker.high} tickerLow={ticker.low}\r\n                tickerVolume={ticker.volume}> </TickerCard>\r\n                \r\n            });\r\n        }\r\n        return (\r\n                <div className=\"c-watchlist-page\">\r\n                <LiveSearchBox \r\n                searchTextChanged={this.searchTickers}\r\n                resultSelected={this.addTicker}\r\n                placeholderText=\"Symbol/Company/Index\" \r\n                results={this.state.results} />\r\n                \r\n                <div>{tickerCards}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default WatchlistPage;","D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\MarketPage.js",["64","65"],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\StockappNavbar.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\pages\\SignupPage.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\LiveSearchBox.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\TickerCard.js",[],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\MarketsView.js",["66","67","68"],"D:\\MyDev\\frontend\\appleseeds\\lessons\\final project\\StockApp\\stockapp\\src\\components\\ExchangeView.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":20,"column":30,"nodeType":"80","messageId":"81","endLine":20,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":20,"column":66,"nodeType":"80","messageId":"81","endLine":20,"endColumn":68},{"ruleId":"74","severity":1,"message":"75","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":22},{"ruleId":"74","severity":1,"message":"82","line":29,"column":13,"nodeType":"76","messageId":"77","endLine":29,"endColumn":21},{"ruleId":"74","severity":1,"message":"83","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"84","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"85","line":20,"column":15,"nodeType":"76","messageId":"77","endLine":20,"endColumn":28},{"ruleId":"74","severity":1,"message":"83","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'StockappNavbar' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newIndex' is assigned a value but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'indexCardInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]